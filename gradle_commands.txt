COMANDOS GRADLE

Abrir Gradle view tool no Intellij:
View -> Tool Windows -> Gradle

gradle -v

gradle build

gradle properties

gradle tasks
gradle tasks --all

gradle projects
gradle -q projects

gradle dependencies

gradle dependencies --configuration compile
gradle dependencies --configuration testCompile

Habilitar no build.gradle: apply plugin: 'project-report'
gradle htmlDependencyReport

gradle -q clean

------------

GRADLE WRAPPER

gradlew -q projects

gradle wrapper --gradle-version 3.5
Gera arquivos do Gradle wrapper(só usar quando não existem esses arquivos que são: 
gradlew, gradlew.bat, gradle\wrapper\gradle-wrapper.jar e gradle\wrapper\gradle-wrapper.properties)

------------

PARA MIGRAR PARA O GRADLE 6 E ANALISAR COISAS DEPRECIADAS

gradle --warning-mode all
Use '--warning-mode all' to show the individual deprecation warnings.

gradle --warning-mode all --stacktrace
Run with --stacktrace to get the full stack trace of this deprecation warning.

OBS: Para fazer o curso tive que usar a versão 5.6.4 do Gradle, pois a versão mais nova atualmente 6.5.1 é incompatível

------------

CRIAR PRÓPRIA TASK

Colocar no build.gradle:

task showDate{
    dependsOn build
    group = 'my tasks'
    description = "Show current date"
    doLast{
        println ""
        println 'Current Date: ' + new Date()
        println ""
    }
}

Executar:

gradle showDate

--------------------------------------------------------------------------

GROOVY

1-Para testar um pouco de Groovy, no Intellij menu Tools > Groovy Console...

2-Digitar:
System.out.println("Hello World!")

3-Ctrl + Enter para rodar o código

EXEMPLOS

System.out.println("Hello World!");

------------

println("Hello World without System.out")

------------

println "Hello World without parentheses"

------------

class MyClass {
    void doSomething(Closure closure){
        closure.call()
    }
}

myObject = new MyClass()

myObject.doSomething {
    println new Date()
}